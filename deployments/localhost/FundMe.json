{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x537d51ee6d56ad15e3535a4d5ba3865a8d69367c39755251c4d908edf109513f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "975039",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xbc590ce20bb8ccb8340dc657e834db6e1d3ae34ddab346dfec8df52969d77906",
    "transactionHash": "0x537d51ee6d56ad15e3535a4d5ba3865a8d69367c39755251c4d908edf109513f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "975039",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "edcf12292630324b58d3dd4a372b6d5e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Patrick Collin\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contact for crodw funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor receive function (if exists) fallback function (if exists) external public internal private\"}},\"notice\":\"This contact is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//? Pragma\\npragma solidity ^0.8.19;\\n//? import\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n//? Error codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Library, Contracts\\n\\n/** @title A contact for crodw funding\\n * @author Patrick Collin\\n * @notice This contact is to demo a simple funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables!\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    address public immutable s_owner;\\n    uint256 public MINIMUM_USD = 50 * 1e8;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != s_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    /**\\n     * constructor\\n     * receive function (if exists)\\n     * fallback function (if exists)\\n     * external\\n     * public\\n     * internal\\n     * private\\n     */\\n    constructor(address s_priceFeedAddress) {\\n        s_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n}\\n\",\"keccak256\":\"0xbd67e9637180d98036278b7ffeb9d4a721670c458dd11d04c1af4112569cc4cc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x1243282a2a97575c163b563534c56b07e8f2062725c94da146515ae5cde90171\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405264012a05f2006002553480156200001a57600080fd5b506040516200115c3803806200115c833981810160405281019062000040919062000126565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000158565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ee82620000c1565b9050919050565b6200010081620000e1565b81146200010c57600080fd5b50565b6000815190506200012081620000f5565b92915050565b6000602082840312156200013f576200013e620000bc565b5b60006200014f848285016200010f565b91505092915050565b608051610fda6200018260003960008181610330015281816105b501526107f30152610fda6000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063e3978240146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f0565b6040516100ba9190610a08565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610a66565b610316565b6040516100f79190610aac565b60405180910390f35b34801561010c57600080fd5b5061011561032e565b005b34801561012357600080fd5b5061013e60048036038101906101399190610af3565b61056e565b60405161014b9190610b2f565b60405180910390f35b34801561016057600080fd5b506101696105ad565b6040516101769190610aac565b60405180910390f35b6101876101be565b005b6101916105b3565b005b34801561019f57600080fd5b506101a86107f1565b6040516101b59190610b2f565b60405180910390f35b6002546101f6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461081590919063ffffffff16565b11610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d90610ba7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102849190610bf6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045e576000600182815481106103d9576103d8610c2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045690610c59565b9150506103b6565b50600067ffffffffffffffff81111561047a57610479610ca1565b5b6040519080825280602002602001820160405280156104a85781602001602082028036833780820191505090505b50600190805190602001906104be9291906108e2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e590610d01565b60006040518083038185875af1925050503d8060008114610522576040519150601f19603f3d011682016040523d82523d6000602084013e610527565b606091505b505090508061056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290610d62565b60405180910390fd5b50565b6001818154811061057e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610638576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561067e573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078d57600082828151811061072b5761072a610c2a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078590610c59565b91505061070d565b50600067ffffffffffffffff8111156107a9576107a8610ca1565b5b6040519080825280602002602001820160405280156107d75781602001602082028036833780820191505090505b50600190805190602001906107ed9291906108e2565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061082183610851565b90506000670de0b6b3a7640000858361083a9190610d82565b6108449190610df3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190610eb1565b5050509150506402540be400816108da9190610f2c565b915050919050565b82805482825590600052602060002090810192821561095b579160200282015b8281111561095a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610902565b5b509050610968919061096c565b5090565b5b8082111561098557600081600090555060010161096d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ce6109c96109c484610989565b6109a9565b610989565b9050919050565b60006109e0826109b3565b9050919050565b60006109f2826109d5565b9050919050565b610a02816109e7565b82525050565b6000602082019050610a1d60008301846109f9565b92915050565b600080fd5b6000610a3382610989565b9050919050565b610a4381610a28565b8114610a4e57600080fd5b50565b600081359050610a6081610a3a565b92915050565b600060208284031215610a7c57610a7b610a23565b5b6000610a8a84828501610a51565b91505092915050565b6000819050919050565b610aa681610a93565b82525050565b6000602082019050610ac16000830184610a9d565b92915050565b610ad081610a93565b8114610adb57600080fd5b50565b600081359050610aed81610ac7565b92915050565b600060208284031215610b0957610b08610a23565b5b6000610b1784828501610ade565b91505092915050565b610b2981610a28565b82525050565b6000602082019050610b446000830184610b20565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b91601b83610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0182610a93565b9150610c0c83610a93565b9250828201905080821115610c2457610c23610bc7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c6482610a93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9657610c95610bc7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ceb600083610cd0565b9150610cf682610cdb565b600082019050919050565b6000610d0c82610cde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4c600b83610b4a565b9150610d5782610d16565b602082019050919050565b60006020820190508181036000830152610d7b81610d3f565b9050919050565b6000610d8d82610a93565b9150610d9883610a93565b9250828202610da681610a93565b91508282048414831517610dbd57610dbc610bc7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dfe82610a93565b9150610e0983610a93565b925082610e1957610e18610dc4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e4381610e24565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b6000819050919050565b610e7981610e66565b8114610e8457600080fd5b50565b600081519050610e9681610e70565b92915050565b600081519050610eab81610ac7565b92915050565b600080600080600060a08688031215610ecd57610ecc610a23565b5b6000610edb88828901610e51565b9550506020610eec88828901610e87565b9450506040610efd88828901610e9c565b9350506060610f0e88828901610e9c565b9250506080610f1f88828901610e51565b9150509295509295909350565b6000610f3782610e66565b9150610f4283610e66565b9250828202610f5081610e66565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f8857610f87610bc7565b5b8282058414831517610f9d57610f9c610bc7565b5b509291505056fea2646970667358221220face1b3a111ad79a733bdd7e74965f641c501944705022975eb786392020e90a64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063e3978240146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f0565b6040516100ba9190610a08565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610a66565b610316565b6040516100f79190610aac565b60405180910390f35b34801561010c57600080fd5b5061011561032e565b005b34801561012357600080fd5b5061013e60048036038101906101399190610af3565b61056e565b60405161014b9190610b2f565b60405180910390f35b34801561016057600080fd5b506101696105ad565b6040516101769190610aac565b60405180910390f35b6101876101be565b005b6101916105b3565b005b34801561019f57600080fd5b506101a86107f1565b6040516101b59190610b2f565b60405180910390f35b6002546101f6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461081590919063ffffffff16565b11610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d90610ba7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102849190610bf6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045e576000600182815481106103d9576103d8610c2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045690610c59565b9150506103b6565b50600067ffffffffffffffff81111561047a57610479610ca1565b5b6040519080825280602002602001820160405280156104a85781602001602082028036833780820191505090505b50600190805190602001906104be9291906108e2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e590610d01565b60006040518083038185875af1925050503d8060008114610522576040519150601f19603f3d011682016040523d82523d6000602084013e610527565b606091505b505090508061056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290610d62565b60405180910390fd5b50565b6001818154811061057e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610638576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561067e573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078d57600082828151811061072b5761072a610c2a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078590610c59565b91505061070d565b50600067ffffffffffffffff8111156107a9576107a8610ca1565b5b6040519080825280602002602001820160405280156107d75781602001602082028036833780820191505090505b50600190805190602001906107ed9291906108e2565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061082183610851565b90506000670de0b6b3a7640000858361083a9190610d82565b6108449190610df3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190610eb1565b5050509150506402540be400816108da9190610f2c565b915050919050565b82805482825590600052602060002090810192821561095b579160200282015b8281111561095a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610902565b5b509050610968919061096c565b5090565b5b8082111561098557600081600090555060010161096d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ce6109c96109c484610989565b6109a9565b610989565b9050919050565b60006109e0826109b3565b9050919050565b60006109f2826109d5565b9050919050565b610a02816109e7565b82525050565b6000602082019050610a1d60008301846109f9565b92915050565b600080fd5b6000610a3382610989565b9050919050565b610a4381610a28565b8114610a4e57600080fd5b50565b600081359050610a6081610a3a565b92915050565b600060208284031215610a7c57610a7b610a23565b5b6000610a8a84828501610a51565b91505092915050565b6000819050919050565b610aa681610a93565b82525050565b6000602082019050610ac16000830184610a9d565b92915050565b610ad081610a93565b8114610adb57600080fd5b50565b600081359050610aed81610ac7565b92915050565b600060208284031215610b0957610b08610a23565b5b6000610b1784828501610ade565b91505092915050565b610b2981610a28565b82525050565b6000602082019050610b446000830184610b20565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b91601b83610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0182610a93565b9150610c0c83610a93565b9250828201905080821115610c2457610c23610bc7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c6482610a93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9657610c95610bc7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ceb600083610cd0565b9150610cf682610cdb565b600082019050919050565b6000610d0c82610cde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4c600b83610b4a565b9150610d5782610d16565b602082019050919050565b60006020820190508181036000830152610d7b81610d3f565b9050919050565b6000610d8d82610a93565b9150610d9883610a93565b9250828202610da681610a93565b91508282048414831517610dbd57610dbc610bc7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dfe82610a93565b9150610e0983610a93565b925082610e1957610e18610dc4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e4381610e24565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b6000819050919050565b610e7981610e66565b8114610e8457600080fd5b50565b600081519050610e9681610e70565b92915050565b600081519050610eab81610ac7565b92915050565b600080600080600060a08688031215610ecd57610ecc610a23565b5b6000610edb88828901610e51565b9550506020610eec88828901610e87565b9450506040610efd88828901610e9c565b9350506060610f0e88828901610e9c565b9250506080610f1f88828901610e51565b9150509295509295909350565b6000610f3782610e66565b9150610f4283610e66565b9250828202610f5081610e66565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f8857610f87610bc7565b5b8282058414831517610f9d57610f9c610bc7565b5b509291505056fea2646970667358221220face1b3a111ad79a733bdd7e74965f641c501944705022975eb786392020e90a64736f6c63430008130033",
  "devdoc": {
    "author": "Patrick Collin",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contact for crodw funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor receive function (if exists) fallback function (if exists) external public internal private"
      }
    },
    "notice": "This contact is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}